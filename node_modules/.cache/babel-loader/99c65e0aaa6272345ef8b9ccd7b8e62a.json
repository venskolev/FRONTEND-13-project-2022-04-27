{"ast":null,"code":"import axios from 'axios';\n\nconst setUserListStart = () => {\n  return {\n    type: 'SET_USER_LIST_START',\n    payload: {\n      error: null,\n      deleteError: null\n    }\n  };\n};\n\nconst setUserListSuccess = data => {\n  return {\n    type: 'SET_USER_LIST_SUCCESS',\n    payload: {\n      users: data\n    }\n  };\n};\n\nconst setUserListError = err => {\n  return {\n    type: 'SET_USER_LIST_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const setUserList = () => dispatch => {\n  dispatch(setUserListStart());\n  axios.get('http://localhost:3000/api/users').then(res => dispatch(setUserListSuccess(res.data))).catch(err => dispatch(setUserListError(err)));\n};\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START',\n    payload: {}\n  };\n};\n\nconst createUserSuccess = userData => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst createUserError = err => {\n  return {\n    type: 'CREATE_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const createUser = userData => dispatch => {\n  dispatch(createUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.post('http://localhost:3000/api/users', userData, config).then(res => dispatch(createUserSuccess(res.data))).catch(err => dispatch(createUserError(err)));\n};\nexport const initUser = () => dispatch => {\n  dispatch({\n    type: 'INIT_USER',\n    payload: {\n      firstname: '',\n      lastname: '',\n      sex: '',\n      age: '',\n      jobTitle: '',\n      image: '',\n      createSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START',\n    payload: {}\n  };\n};\n\nconst editUserSuccess = userData => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst editUserError = err => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const editUser = (userData, history, initEdit) => dispatch => {\n  dispatch(editUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.put(`http://localhost:3000/api/users${userData.id}`, userData, config).then(res => {\n    dispatch(editUserSuccess(res.data));\n    history.push('/');\n    initEdit();\n  }).catch(err => dispatch(editUserError(err)));\n};\nexport const initEdit = () => dispatch => {\n  dispatch({\n    type: 'INIT_EDIT',\n    payload: {\n      firstname: '',\n      lastname: '',\n      sex: '',\n      age: '',\n      jobTitle: '',\n      image: '',\n      editSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START',\n    payload: {}\n  };\n};\n\nconst deleteUserSuccess = () => {\n  return {\n    type: 'DELETE_USER_SUCCESS'\n  };\n};\n\nconst deleteUserError = err => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    payload: {\n      deleteError: err\n    }\n  };\n};\n\nexport const deleteUser = id => dispatch => {\n  dispatch(deleteUserStart());\n  axios.delete(`http://localhost:3000/api/users${id}`).then(() => {\n    dispatch(deleteUserSuccess());\n    dispatch(setUserList());\n  }).catch(err => dispatch(deleteUserError(err)));\n};\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START',\n    payload: {}\n  };\n};\n\nconst getUserSuccess = userData => {\n  console.log(userData);\n  return {\n    type: 'GET_USER_SUCCESS',\n    payload: {\n      user: userData\n    }\n  };\n};\n\nconst getUserError = err => {\n  return {\n    type: 'GET_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const getUser = (id, setUserData) => dispatch => {\n  dispatch(getUserStart());\n  axios.get(`http://localhost:3000/api/users${id}`).then(res => {\n    const {\n      firstname,\n      lastname,\n      sex,\n      age,\n      jobTitle,\n      image\n    } = res.data;\n    const userData = {\n      firstname,\n      lastname,\n      sex,\n      age,\n      jobTitle,\n      image\n    };\n    dispatch(getUserSuccess(userData));\n    setUserData(userData);\n  }).catch(err => dispatch(getUserError(err)));\n};","map":{"version":3,"sources":["/home/user/Documents/DCI/backand/BACKEND-13-project-2022-04-27/frontend/src/redux/action-creators/users.js"],"names":["axios","setUserListStart","type","payload","error","deleteError","setUserListSuccess","data","users","setUserListError","err","setUserList","dispatch","get","then","res","catch","createUserStart","createUserSuccess","userData","createUserError","createUser","config","headers","post","initUser","firstname","lastname","sex","age","jobTitle","image","createSuccess","editUserStart","editUserSuccess","editUserError","editUser","history","initEdit","put","id","push","editSuccess","deleteUserStart","deleteUserSuccess","deleteUserError","deleteUser","delete","getUserStart","getUserSuccess","console","log","user","getUserError","getUser","setUserData"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst setUserListStart = () => {\n  return {\n    type: 'SET_USER_LIST_START',\n    payload: { error: null, deleteError: null } \n  };\n};\n\nconst setUserListSuccess = data => {\n\n  return {\n    type: 'SET_USER_LIST_SUCCESS',\n    payload: { users: data }\n  };\n};\n\nconst setUserListError = err => {\n  return {\n    type: 'SET_USER_LIST_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const setUserList = () => dispatch => {\n  dispatch(setUserListStart());\n  axios\n    .get('http://localhost:3000/api/users')\n    .then(res => dispatch(setUserListSuccess(res.data)))\n    .catch(err => dispatch(setUserListError(err)));\n};\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START',\n    payload: {}\n  };\n};\n\nconst createUserSuccess = userData => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst createUserError = err => {\n  return {\n    type: 'CREATE_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const createUser = userData => dispatch => {\n  dispatch(createUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios\n    .post('http://localhost:3000/api/users', userData, config)\n    .then(res => dispatch(createUserSuccess(res.data)))\n    .catch(err => dispatch(createUserError(err)));\n};\n\nexport const initUser = () => dispatch => {\n  dispatch({\n    type: 'INIT_USER',\n    payload: {\n      firstname: '',\n      lastname: '',\n      sex: '',\n      age: '',\n      jobTitle: '',\n      image: '',\n      createSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START',\n    payload: {}\n  };\n};\n\nconst editUserSuccess = userData => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst editUserError = err => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const editUser = (userData, history, initEdit) => dispatch => {\n  dispatch(editUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios\n    .put(`http://localhost:3000/api/users${userData.id}`, userData, config)\n    .then(res => {\n      dispatch(editUserSuccess(res.data));\n      history.push('/');\n      initEdit();\n    })\n    .catch(err => dispatch(editUserError(err)));\n};\n\nexport const initEdit = () => dispatch => {\n  dispatch({\n    type: 'INIT_EDIT',\n    payload: {\n      firstname: '',\n      lastname: '',\n      sex: '',\n      age: '',\n      jobTitle: '',\n      image: '',\n      editSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START',\n    payload: {}\n  };\n};\n\nconst deleteUserSuccess = () => {\n  return {\n    type: 'DELETE_USER_SUCCESS'\n  };\n};\n\nconst deleteUserError = err => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    payload: { deleteError: err }\n  };\n};\n\nexport const deleteUser = id => dispatch => {\n  dispatch(deleteUserStart());\n  axios\n    .delete(`http://localhost:3000/api/users${id}`)\n    .then(() => {\n      dispatch(deleteUserSuccess());\n      dispatch(setUserList());\n    })\n    .catch(err => dispatch(deleteUserError(err)));\n};\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START',\n    payload: {}\n  };\n};\n\nconst getUserSuccess = userData => {\n   console.log(userData);\n  return {\n    type: 'GET_USER_SUCCESS',\n    payload: { user: userData }\n  };\n};\n\nconst getUserError = err => {\n  return {\n    type: 'GET_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const getUser = (id, setUserData) => dispatch => {\n  dispatch(getUserStart());\n  axios\n    .get(`http://localhost:3000/api/users${id}`)\n    .then(res => {\n      const { firstname, lastname, sex, age, jobTitle, image } = res.data;\n      const userData = { firstname, lastname, sex, age, jobTitle, image };\n      dispatch(getUserSuccess(userData));\n      setUserData(userData);\n    })\n    .catch(err => dispatch(getUserError(err)));\n};"]},"metadata":{},"sourceType":"module"}