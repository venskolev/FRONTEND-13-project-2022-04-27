{"ast":null,"code":"import axios from 'axios';\n\nconst setUserListStart = () => {\n  return {\n    type: 'SET_USER_LIST_START',\n    payload: {\n      error: null,\n      deleteError: null\n    }\n  };\n};\n\nconst setUserListSuccess = data => {\n  return {\n    type: 'SET_USER_LIST_SUCCESS',\n    payload: {\n      users: data\n    }\n  };\n};\n\nconst setUserListError = err => {\n  return {\n    type: 'SET_USER_LIST_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const setUserList = () => dispatch => {\n  dispatch(setUserListStart());\n  axios.get('http://localhost:3000/api/users').then(res => dispatch(setUserListSuccess(res.data))).catch(err => dispatch(setUserListError(err)));\n};\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START',\n    payload: {}\n  };\n};\n\nconst createUserSuccess = userData => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst createUserError = err => {\n  return {\n    type: 'CREATE_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const createUser = userData => dispatch => {\n  dispatch(createUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.post('http://localhost:3000/api/users', userData, config).then(res => dispatch(createUserSuccess(res.data))).catch(err => dispatch(createUserError(err)));\n};\nexport const initUser = () => dispatch => {\n  dispatch({\n    type: 'INIT_USER',\n    payload: {\n      firstname: '',\n      lastname: '',\n      jobТitle: '',\n      age: '',\n      createSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START',\n    payload: {}\n  };\n};\n\nconst editUserSuccess = userData => {\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst editUserError = err => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const editUser = (userData, history, initEdit) => dispatch => {\n  dispatch(editUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios.put(`http://localhost:3000/api/users/${userData.id}`, userData, config).then(res => {\n    dispatch(editUserSuccess(res.data));\n    history.push('/');\n    initEdit();\n  }).catch(err => dispatch(editUserError(err)));\n}; // -------\n\nexport const initEdit = () => dispatch => {\n  dispatch({\n    type: 'INIT_EDIT',\n    payload: {\n      firstname: '',\n      lastname: '',\n      jobТitle: '',\n      age: '',\n      editSuccess: false,\n      error: null\n    }\n  });\n}; // --------\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START',\n    payload: {}\n  };\n};\n\nconst deleteUserSuccess = () => {\n  // console.log(userData);\n  return {\n    type: 'DELETE_USER_SUCCESS' // payload: userData\n\n  };\n};\n\nconst deleteUserError = err => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    payload: {\n      deleteError: err\n    }\n  };\n};\n\nexport const deleteUser = id => dispatch => {\n  dispatch(deleteUserStart());\n  axios.delete(`http://localhost:3000/api/users/${id}`).then(() => {\n    dispatch(deleteUserSuccess()); //might use if we need deleted id\n\n    dispatch(setUserList());\n  }).catch(err => dispatch(deleteUserError(err)));\n}; // --------\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START',\n    payload: {}\n  };\n};\n\nconst getUserSuccess = userData => {\n  // console.log(userData);\n  return {\n    type: 'GET_USER_SUCCESS',\n    payload: {\n      user: userData\n    }\n  };\n};\n\nconst getUserError = err => {\n  return {\n    type: 'GET_USER_ERROR',\n    payload: {\n      error: err\n    }\n  };\n};\n\nexport const getUser = (id, setUserData) => dispatch => {\n  dispatch(getUserStart());\n  axios.get(`http://localhost:3000/api/users/${id}`).then(res => {\n    const {\n      firstname,\n      lastname,\n      jobТitle,\n      age\n    } = res.data;\n    const userData = {\n      firstname,\n      lastname,\n      jobТitle,\n      age\n    };\n    dispatch(getUserSuccess(userData));\n    setUserData(userData);\n  }).catch(err => dispatch(getUserError(err)));\n};","map":{"version":3,"sources":["/home/user/Documents/DCI/backand/BACKEND-13-project-2022-04-27/frontend/src/redux/action-creators/users.js"],"names":["axios","setUserListStart","type","payload","error","deleteError","setUserListSuccess","data","users","setUserListError","err","setUserList","dispatch","get","then","res","catch","createUserStart","createUserSuccess","userData","createUserError","createUser","config","headers","post","initUser","firstname","lastname","jobТitle","age","createSuccess","editUserStart","editUserSuccess","editUserError","editUser","history","initEdit","put","id","push","editSuccess","deleteUserStart","deleteUserSuccess","deleteUserError","deleteUser","delete","getUserStart","getUserSuccess","user","getUserError","getUser","setUserData"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst setUserListStart = () => {\n  return {\n    type: 'SET_USER_LIST_START',\n    payload: { error: null, deleteError: null } \n  };\n};\n\nconst setUserListSuccess = data => {\n  return {\n    type: 'SET_USER_LIST_SUCCESS',\n    payload: { users: data }\n  };\n};\n\nconst setUserListError = err => {\n  return {\n    type: 'SET_USER_LIST_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const setUserList = () => dispatch => {\n  dispatch(setUserListStart());\n  axios\n    .get('http://localhost:3000/api/users')\n    .then(res => dispatch(setUserListSuccess(res.data)))\n    .catch(err => dispatch(setUserListError(err)));\n};\n\n\nconst createUserStart = () => {\n  return {\n    type: 'CREATE_USER_START',\n    payload: {}\n  };\n};\n\nconst createUserSuccess = userData => {\n  return {\n    type: 'CREATE_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst createUserError = err => {\n  return {\n    type: 'CREATE_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const createUser = userData => dispatch => {\n  dispatch(createUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios\n    .post('http://localhost:3000/api/users', userData, config)\n    .then(res => dispatch(createUserSuccess(res.data)))\n    .catch(err => dispatch(createUserError(err)));\n};\n\nexport const initUser = () => dispatch => {\n  dispatch({\n    type: 'INIT_USER',\n    payload: {\n      firstname: '',\n      lastname: '',\n      jobТitle: '',\n      age: '',\n      createSuccess: false,\n      error: null\n    }\n  });\n};\n\nconst editUserStart = () => {\n  return {\n    type: 'EDIT_USER_START',\n    payload: {}\n  };\n};\n\nconst editUserSuccess = userData => {\n\n  return {\n    type: 'EDIT_USER_SUCCESS',\n    payload: userData\n  };\n};\n\nconst editUserError = err => {\n  return {\n    type: 'EDIT_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const editUser = (userData, history, initEdit) => dispatch => {\n  dispatch(editUserStart());\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  axios\n    .put(`http://localhost:3000/api/users/${userData.id}`, userData, config)\n    .then(res => {\n      dispatch(editUserSuccess(res.data));\n      history.push('/');\n      initEdit();\n    })\n    .catch(err => dispatch(editUserError(err)));\n};\n\n// -------\n\nexport const initEdit = () => dispatch => {\n  dispatch({\n    type: 'INIT_EDIT',\n    payload: {\n      firstname: '',\n      lastname: '',\n      jobТitle: '',\n      age: '',\n      editSuccess: false,\n      error: null\n    }\n  });\n};\n\n// --------\n\nconst deleteUserStart = () => {\n  return {\n    type: 'DELETE_USER_START',\n    payload: {}\n  };\n};\n\nconst deleteUserSuccess = () => {\n  // console.log(userData);\n  return {\n    type: 'DELETE_USER_SUCCESS'\n    // payload: userData\n  };\n};\n\nconst deleteUserError = err => {\n  return {\n    type: 'DELETE_USER_ERROR',\n    payload: { deleteError: err }\n  };\n};\n\nexport const deleteUser = id => dispatch => {\n  dispatch(deleteUserStart());\n  axios\n    .delete(`http://localhost:3000/api/users/${id}`)\n    .then(() => {\n      dispatch(deleteUserSuccess()); //might use if we need deleted id\n      dispatch(setUserList());\n    })\n    .catch(err => dispatch(deleteUserError(err)));\n};\n\n// --------\n\nconst getUserStart = () => {\n  return {\n    type: 'GET_USER_START',\n    payload: {}\n  };\n};\n\nconst getUserSuccess = userData => {\n  // console.log(userData);\n  return {\n    type: 'GET_USER_SUCCESS',\n    payload: { user: userData }\n  };\n};\n\nconst getUserError = err => {\n  return {\n    type: 'GET_USER_ERROR',\n    payload: { error: err }\n  };\n};\n\nexport const getUser = (id, setUserData) => dispatch => {\n  dispatch(getUserStart());\n  axios\n    .get(`http://localhost:3000/api/users/${id}`)\n    .then(res => {\n      const { firstname, lastname, jobТitle, age } = res.data;\n      const userData = { firstname, lastname, jobТitle, age };\n      dispatch(getUserSuccess(userData));\n      setUserData(userData);\n    })\n    .catch(err => dispatch(getUserError(err)));\n};\n"]},"metadata":{},"sourceType":"module"}